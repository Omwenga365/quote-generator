{"ast":null,"code":"var _jsxFileName = \"/home/victor/quote-generator/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const url = \"https://api.quotable.io/random\";\n  let quoteData = {\n    content: \"Let time be your only competitor.\",\n    author: \"Ahmed Saber\"\n  };\n  const [quote, setQuote] = useState(quoteData);\n\n  const generateQuote = () => {\n    fetch(url).then(response => response.json()).then(data => {\n      setQuote(data);\n    });\n  };\n\n  const copy = () => {\n    navigator.clipboard.writeText(quote.author + \" once said: \" + quote.content);\n    alert('Copied');\n  };\n\n  const shareOnWhatsApp = () => {\n    const text = encodeURIComponent(quote.author + \" once said: \" + quote.content);\n    window.open(`https://api.whatsapp.com/send?text=${text}`);\n  };\n\n  const shareOnTwitter = () => {\n    const text = encodeURIComponent(quote.author + \" once said: \" + quote.content);\n    window.open(`https://twitter.com/intent/tweet?text=${text}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quote Generator React App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: quote.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: quote.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: copy,\n          className: \"btn\",\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: generateQuote,\n          children: \"Generate Another Quote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: shareOnWhatsApp,\n          children: \"Share on WhatsApp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: shareOnTwitter,\n          children: \"Share on Twitter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"sv55tLmWrN78CQEVUV0ITM0H5+s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/victor/quote-generator/src/App.js"],"names":["React","useState","App","url","quoteData","content","author","quote","setQuote","generateQuote","fetch","then","response","json","data","copy","navigator","clipboard","writeText","alert","shareOnWhatsApp","text","encodeURIComponent","window","open","shareOnTwitter"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,GAAG,GAAG,gCAAZ;AACA,MAAIC,SAAS,GAAG;AACdC,IAAAA,OAAO,EAAE,mCADK;AAEdC,IAAAA,MAAM,EAAE;AAFM,GAAhB;AAIA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACG,SAAD,CAAlC;;AAEA,QAAMK,aAAa,GAAG,MAAM;AAC1BC,IAAAA,KAAK,CAACP,GAAD,CAAL,CACGQ,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdN,MAAAA,QAAQ,CAACM,IAAD,CAAR;AACD,KAJH;AAKD,GAND;;AAQA,QAAMC,IAAI,GAAG,MAAM;AACjBC,IAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BX,KAAK,CAACD,MAAN,GAAe,cAAf,GAAgCC,KAAK,CAACF,OAApE;AACAc,IAAAA,KAAK,CAAC,QAAD,CAAL;AACD,GAHD;;AAMA,QAAMC,eAAe,GAAG,MAAM;AAC5B,UAAMC,IAAI,GAAGC,kBAAkB,CAACf,KAAK,CAACD,MAAN,GAAe,cAAf,GAAgCC,KAAK,CAACF,OAAvC,CAA/B;AACAkB,IAAAA,MAAM,CAACC,IAAP,CAAa,sCAAqCH,IAAK,EAAvD;AACD,GAHD;;AAMA,QAAMI,cAAc,GAAG,MAAM;AAC3B,UAAMJ,IAAI,GAAGC,kBAAkB,CAACf,KAAK,CAACD,MAAN,GAAe,cAAf,GAAgCC,KAAK,CAACF,OAAvC,CAA/B;AACAkB,IAAAA,MAAM,CAACC,IAAP,CAAa,yCAAwCH,IAAK,EAA1D;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA,kBAAId,KAAK,CAACF;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAOE,KAAK,CAACD;AAAb;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAES,IAAjB;AAAuB,UAAA,SAAS,EAAC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAEN,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE;AAAQ,UAAA,OAAO,EAAEW,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAQ,UAAA,OAAO,EAAEK,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAiBD,CAlDD;;GAAMvB,G;;KAAAA,G;AAoDN,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\nconst App = () => {\n  const url = \"https://api.quotable.io/random\";\n  let quoteData = {\n    content: \"Let time be your only competitor.\",\n    author: \"Ahmed Saber\"\n  };\n  const [quote, setQuote] = useState(quoteData);\n\n  const generateQuote = () => {\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setQuote(data);\n      });\n  };\n\n  const copy = () => {\n    navigator.clipboard.writeText(quote.author + \" once said: \" + quote.content);\n    alert('Copied');\n  };\n\n  \n  const shareOnWhatsApp = () => {\n    const text = encodeURIComponent(quote.author + \" once said: \" + quote.content);\n    window.open(`https://api.whatsapp.com/send?text=${text}`);\n  };\n\n  \n  const shareOnTwitter = () => {\n    const text = encodeURIComponent(quote.author + \" once said: \" + quote.content);\n    window.open(`https://twitter.com/intent/tweet?text=${text}`);\n  };\n\n  return (\n    <>\n      <h1>Quote Generator React App</h1>\n      <div className=\"container\">\n        <p>{quote.content}</p>\n        <span>{quote.author}</span>\n        <div className=\"btns\">\n          <button onClick={copy} className=\"btn\">Copy</button>\n          <button onClick={generateQuote}>Generate Another Quote</button>\n          \n          \n          <button onClick={shareOnWhatsApp}>Share on WhatsApp</button>\n          <button onClick={shareOnTwitter}>Share on Twitter</button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}